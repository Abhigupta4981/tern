#!/usr/bin/env python

'''
Tern executable
'''


import argparse
import report


def main(args):
    '''Execute according to subcommands'''
    if args.name == 'report':
        if args.summary:
            report.execute_summary(args)
        else:
            report.execute(args)

if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        prog='Tern',
        description='''
           Tern is a Docker image package curation tool. Tern retrieves
    information about packages that are installed in a Docker image that is
    built from a Dockerfile, including dependencies. It also allows for
    curation of packages that are installed and maintained manually''')
    subparsers = parser.add_subparsers(help='Subcommands')
    # subparser for report
    parser_report = subparsers.add_parser('report',
                                          help="Create a report")
    parser_report.add_argument('-d', '--dockerfile',
                               help="Dockerfile used to build the Docker image")
    parser_report.add_argument('-s', '--summary', action='store_true',
                               help="Summarize the report as a list of packages"
                               "with associated information")
    parser_report.set_defaults(name='report')
    args = parser.parse_args()
    main(args)
